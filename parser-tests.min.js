caterwaul.js_all()(function(a){initial.input()/-eq/s-se-initial.position()/-eq/0-se-initial.value()/-eq/undefined-se-initial.next(1,42).length/-eq/1-se-initial.next(1,42)[0].input()/-eq/s-se-initial.next(1,42)[0].position()/-eq/1-se-initial.next(1,42)[0].value()/-eq/42-where[s="foo",initial=new linear_string_state(s)],initial.input()/-eq/root-se-initial.position()/-eq/undefined-se-initial.value()/-eq/undefined-se-initial.next(1,42).length/-eq/2-se-initial.next(1,42)[0].input()/-eq/first_child-se-initial.next(1,42)[0].position()/-eq/"c1"-se-initial.next(1,42)[0].value()/-eq/42-se-initial.next(1,43)[1].input()/-eq/other_child-se-initial.next(1,43)[1].position()/-eq/"c2"-se-initial.next(1,43)[1].value()/-eq/43-where[first_child={},other_child={},root={c1:first_child,c2:other_child},initial=new structure_state(root)],initial.input()/-eq/tree-se-initial.position()/-eq/undefined-se-initial.value()/-eq/undefined-se-initial.next(1,42).constructor/-eq/Array-se-initial.next(1,42).length/-eq/2-se-initial.next(1,42)[0].input()/-eq/left_node-se-initial.next(1,42)[0].position()/-eq/0-se-initial.next(1,42)[0].value()/-eq/42-se-initial.next(1,43)[1].input()/-eq/right_node-se-initial.next(1,43)[1].position()/-eq/1-se-initial.next(1,43)[1].value()/-eq/43-where[tree="3 + 4 * 5".qs,left_node=tree[0],right_node=tree[1],initial=new array_state(tree)],any2([initial]).length/-eq/2-se-any2([initial])[0].position()/-eq/0-se-any2([initial])[0].input()/-eq/left-se-any2([initial])[0].value()/-eq/left-se-any2([initial])[1].position()/-eq/1-se-any2([initial])[1].input()/-eq/right-se-any2([initial])[1].value()/-eq/right-se-any3([initial]).length/-eq/2-se-any3([initial])[0].position()/-eq/0-se-any3([initial])[0].input()/-eq/right[0]-se-any3([initial])[0].value()/-eq/right[0]-se-any3([initial])[1].position()/-eq/1-se-any3([initial])[1].input()/-eq/right[1]-se-any3([initial])[1].value()/-eq/right[1]-se-any2c([initial]).length/-eq/2-se-any2c([initial])[0].position()/-eq/0-se-any2c([initial])[0].input()/-eq/left-se-any2c([initial])[0].value().length/-eq/2-se-any2c([initial])[0].value()[0]/-eq/tree-se-any2c([initial])[0].value()[1]/-eq/left-se-any2c([initial])[1].position()/-eq/1-se-any2c([initial])[1].input()/-eq/right-se-any2c([initial])[1].value().length/-eq/2-se-any2c([initial])[1].value()[0]/-eq/tree-se-any2c([initial])[1].value()[1]/-eq/right-se-any3c([initial]).length/-eq/2-se-any3c([initial])[0].position()/-eq/0-se-any3c([initial])[0].input()/-eq/right[0]-se-any3c([initial])[0].value().length/-eq/3-se-any3c([initial])[0].value()[0]/-eq/tree-se-any3c([initial])[0].value()[1]/-eq/right-se-any3c([initial])[0].value()[2]/-eq/right[0]-se-any3c([initial])[1].position()/-eq/1-se-any3c([initial])[1].input()/-eq/right[1]-se-any3c([initial])[1].value().length/-eq/3-se-any3c([initial])[1].value()[0]/-eq/tree-se-any3c([initial])[1].value()[1]/-eq/right-se-any3c([initial])[1].value()[2]/-eq/right[1]-se-(op/-bfs/id)([initial]).length/-eq/2-se-(op/-bfs/id)([initial])[0].value()/-eq/left-se-(op/-bfs/id)([initial])[1].value()/-eq/right-se-(num/-bfs/id)([initial]).length/-eq/0-se-op_or_num([initial]).length/-eq/2-se-op_or_num([initial])[0].value()/-eq/left-se-op_or_num([initial])[1].value()/-eq/right-se-op_then_either([initial]).length/-eq/2-se-op_then_either([initial])[0].value()/-eq/right[0]-se-op_then_either([initial])[1].value()/-eq/right[1]-se-op_then_maybe_either([initial]).length/-eq/3-se-op_then_maybe_either([initial])[0].value()/-eq/left-se-op_then_maybe_either([initial])[1].value()/-eq/right[0]-se-op_then_maybe_either([initial])[2].value()/-eq/right[1]-se-op_then_maybe_either_all([initial]).length/-eq/4-se-op_then_maybe_either_all([initial])[0].value()/-eq/left-se-op_then_maybe_either_all([initial])[1].value()/-eq/right[0]-se-op_then_maybe_either_all([initial])[2].value()/-eq/right[1]-se-op_then_maybe_either_all([initial])[3].value()/-eq/right-where[tree="3 + 4 * 5".qs,left=tree[0],right=tree[1],initial=new array_state(tree),any(states)=states*~![x.next(1,x.input())]-seq,any=annotate(any,"any",[]),op(states)=states%[/\W/.test(x.input().data)]*~![x.next(1,x.input())]-seq,op=annotate(op,"op",[]),num(states)=states%[/\d/.test(x.input().data)]*~![x.next(1,x.input())]-seq,num=annotate(num,"num",[]),id=iv("_".qf),op_or_num=op/-alt/num/-bfs/id,op_then_either=op/-bfs/op_or_num,op_then_maybe_either=op/-bfs/(op_or_num/-alt/id),op_then_maybe_either_all=op/-bfs/(op_or_num/-all/id),any2=any/-bfs/iv("_".qf),any3=any/any/-bfs/id,any2c=any/-bfc/iv("_".qf),any3c=any/any/-bfc/id],using[caterwaul.parser],where[eq(x,y)=x===y||null["#{x} should === #{y}"]]})(caterwaul);